(Program)
  (MainFunction)
    (Keyword: void)
    (Keyword: main)
    (Delimiter: ()
    (Delimiter: ))
    (Delimiter: {)
    (StatementList)
      (Statement)
        (SingleLineComment: ~~)
      (Statement)
        (MultiLineComment)
          (Delimiter: ~/)
          (Delimiter: /~)
      (Statement)
        (Expression)
          (Identifier: Rastyvar1)
      (Statement)
        (Expression)
          (Identifier: rastyvar1)
      (Statement)
        (Expression)
          (INT_LITERAL: 18)
      (Statement)
        (Expression)
          (Identifier: rastyIdentifier)
      (Statement)
        (Expression)
          (FLOAT_LITERAL: 18.18)
      (Statement)
        (Expression)
          (CHAR_LITERAL: 'R')
      (Statement)
        (Expression)
          (STRING_LITERAL: "String Literal")
      (Statement)
        (Expression)
          (Operator: +)
      (Statement)
        (Expression)
          (Operator: -)
      (Statement)
        (Expression)
          (Operator: *)
      (Statement)
        (Expression)
          (Operator: /)
      (Statement)
        (Expression)
          (Operator: %)
      (Statement)
        (Expression)
          (Operator: ^)
      (Statement)
        (Expression)
          (Operator: //)
      (Statement)
        (Expression)
          (AssignmentOperator: =)
      (Statement)
        (Expression)
          (AssignmentOperator: +=)
      (Statement)
        (Expression)
          (AssignmentOperator: -=)
      (Statement)
        (Expression)
          (AssignmentOperator: *=)
      (Statement)
        (Expression)
          (AssignmentOperator: /=)
      (Statement)
        (Expression)
          (AssignmentOperator: %=)
      (Statement)
        (Expression)
          (AssignmentOperator: //=)
      (Statement)
        (Expression)
          (Operator: +)
      (Statement)
        (Expression)
          (UnaryOperator: ++)
      (Statement)
        (Expression)
          (Operator: -)
      (Statement)
        (Expression)
          (UnaryOperator: --)
      (Statement)
        (Expression)
          (LogicalOperator: !)
      (Statement)
        (Expression)
          (LogicalOperator: ||)
      (Statement)
        (Expression)
          (LogicalOperator: &&)
      (Statement)
        (Expression)
          (RelationalOperator: ==)
      (Statement)
        (Expression)
          (RelationalOperator: !=)
      (Statement)
        (Expression)
          (RelationalOperator: >)
      (Statement)
        (Expression)
          (RelationalOperator: <)
      (Statement)
        (Expression)
          (RelationalOperator: >=)
      (Statement)
        (Expression)
          (RelationalOperator: <=)
      (Statement)
        (Expression)
          (Keyword: bool)
      (Statement)
        (Expression)
          (Keyword: break)
      (Statement)
        (Expression)
          (Keyword: case)
      (Statement)
        (Expression)
          (Keyword: char)
      (Statement)
        (Expression)
          (Keyword: continue)
      (Statement)
        (Expression)
          (Keyword: default)
      (Statement)
        (Expression)
          (Keyword: do)
      (Statement)
        (Expression)
          (Keyword: else)
      (Statement)
        (Expression)
          (Keyword: float)
      (Statement)
        (Expression)
          (Keyword: for)
      (Statement)
        (Expression)
          (Keyword: goto)
      (Statement)
        (Expression)
          (Keyword: if)
      (Statement)
        (Expression)
          (Keyword: int)
      (Statement)
        (Expression)
          (Keyword: main)
      (Statement)
        (Expression)
          (Keyword: printf)
      (Statement)
        (Expression)
          (Keyword: return)
      (Statement)
        (Expression)
          (Keyword: input)
      (Statement)
        (Expression)
          (Keyword: string)
      (Statement)
        (Expression)
          (Keyword: switch)
      (Statement)
        (Expression)
          (Keyword: void)
      (Statement)
        (Expression)
          (Keyword: while)
      (Statement)
        (Expression)
          (Keyword: array)
      (Statement)
        (Expression)
          (BOOLEAN_LITERAL: true)
      (Statement)
        (Expression)
          (BOOLEAN_LITERAL: false)
      (Statement)
        (Expression)
          (NULL_LITERAL: null)
      (Statement)
        (Expression)
          (Keyword: const)
      (Statement)
        (Expression)
          (NoiseWord: by)
      (Statement)
        (Expression)
          (NoiseWord: from)
      (Statement)
        (Expression)
          (NoiseWord: until)
      (Statement)
        (Expression)
          (Delimiter: ()
      (Statement)
        (Expression)
          (Delimiter: ))
      (Statement)
        (Expression)
          (Delimiter: {)
      (Statement)
        (Expression)
          (Delimiter: })
      (Statement)
        (Expression)
          (Delimiter: [)
      (Statement)
        (Expression)
          (Delimiter: ])
      (Statement)
        (Expression)
          (Delimiter: ,)
      (Statement)
        (Expression)
          (Delimiter: .)
      (Statement)
        (Expression)
          (Delimiter: ;)
      (Statement)
        (Expression)
          (Delimiter: :)
    (Delimiter: })
