Comment,~~,1
Comment, Declaration Statements 1/1,1
Keyword,int,2
IDENTIFIER,x,2
Delimiter,;,2
Keyword,int,3
IDENTIFIER,x,3
Delimiter,,,3
IDENTIFIER,y,3
Delimiter,,,3
IDENTIFIER,z,3
Delimiter,;,3
Keyword,int,4
IDENTIFIER,x,4
Delimiter,,,4
IDENTIFIER,y,4
AssignmentOperator,=,4
INT_LITERAL,20,4
Delimiter,,,4
IDENTIFIER,z,4
AssignmentOperator,=,4
IDENTIFIER,x,4
ArithmeticOperator,+,4
IDENTIFIER,y,4
Delimiter,;,4
Comment,~~,6
Comment, Input Statements 1/1,6
Keyword,input,7
Delimiter,(,7
STRING_LITERAL,"%f",7
Delimiter,,,7
SpecifierIdentifier,&value,7
Delimiter,),7
Delimiter,;,7
Comment,~~,9
Comment, Output Statements 3/3,9
Keyword,printf,10
Delimiter,(,10
STRING_LITERAL,"Hello",10
Delimiter,),10
Delimiter,;,10
Keyword,printf,11
Delimiter,(,11
STRING_LITERAL,"%f",11
Delimiter,,,11
IDENTIFIER,value,11
Delimiter,),11
Delimiter,;,11
Keyword,printf,12
Delimiter,(,12
STRING_LITERAL,"Value is %d",12
Delimiter,,,12
IDENTIFIER,value,12
Delimiter,),12
Delimiter,;,12
Comment,~~,14
Comment, Assignment Statements 3/3,14
IDENTIFIER,totalGWA,15
AssignmentOperator,=,15
INT_LITERAL,2,15
Delimiter,;,15
IDENTIFIER,totalNum,16
AssignmentOperator,+=,16
IDENTIFIER,addedPrice,16
Delimiter,;,16
IDENTIFIER,midtermScore,17
AssignmentOperator,=,17
IDENTIFIER,exam,17
ArithmeticOperator,+,17
IDENTIFIER,quizzes,17
Delimiter,;,17
Comment,~~,19
Comment, Assignment Statements 2/2,19
Keyword,for,20
Delimiter,(,20
Keyword,int,20
IDENTIFIER,i,20
AssignmentOperator,=,20
INT_LITERAL,0,20
Delimiter,;,20
IDENTIFIER,i,20
RelationalOperator,<,20
INT_LITERAL,5,20
Delimiter,;,20
IDENTIFIER,i,20
UnaryOperator,++,20
Delimiter,),20
Delimiter,{,20
Keyword,printf,21
Delimiter,(,21
STRING_LITERAL,"hello",21
Delimiter,),21
Delimiter,;,21
Delimiter,},22
Keyword,for,24
Delimiter,(,24
Keyword,int,24
IDENTIFIER,i,24
AssignmentOperator,=,24
INT_LITERAL,0,24
Delimiter,;,24
IDENTIFIER,i,24
RelationalOperator,<,24
INT_LITERAL,3,24
Delimiter,;,24
IDENTIFIER,i,24
UnaryOperator,++,24
Delimiter,),24
Delimiter,{,24
Keyword,for,25
Delimiter,(,25
Keyword,int,25
IDENTIFIER,j,25
AssignmentOperator,=,25
INT_LITERAL,0,25
Delimiter,;,25
IDENTIFIER,j,25
RelationalOperator,<,25
INT_LITERAL,3,25
Delimiter,;,25
IDENTIFIER,j,25
UnaryOperator,++,25
Delimiter,),25
Delimiter,{,25
IDENTIFIER,print,26
Delimiter,(,26
LexicalError,â€œhello,26
Unknown,");,26
Delimiter,},27
Delimiter,},28
Comment,~~,30
Comment, Conditional Statememts 0/3,30
Keyword,if,31
Delimiter,(,31
IDENTIFIER,x,31
RelationalOperator,>,31
INT_LITERAL,5,31
Delimiter,),31
Delimiter,{,31
Keyword,printf,32
Delimiter,(,32
STRING_LITERAL,"x is greater than 5",32
Delimiter,),32
Delimiter,;,32
Delimiter,},33
Keyword,if,35
Delimiter,(,35
IDENTIFIER,x,35
RelationalOperator,>,35
INT_LITERAL,0,35
Delimiter,),35
Delimiter,{,35
Keyword,printf,36
Delimiter,(,36
STRING_LITERAL,"Positive",36
Delimiter,),36
Delimiter,;,36
Delimiter,},37
Keyword,else,37
Delimiter,{,37
Keyword,printf,38
Delimiter,(,38
STRING_LITERAL,"Non-Positive",38
Delimiter,),38
Delimiter,;,38
Delimiter,},39
Keyword,if,41
Delimiter,(,41
IDENTIFIER,x,41
RelationalOperator,>,41
INT_LITERAL,0,41
Delimiter,),41
Delimiter,{,41
Keyword,if,42
Delimiter,(,42
IDENTIFIER,x,42
RelationalOperator,<,42
INT_LITERAL,10,42
Delimiter,),42
Delimiter,{,42
Keyword,printf,43
Delimiter,(,43
STRING_LITERAL,"x is a positive single-digit number",43
Delimiter,),43
Delimiter,;,43
Delimiter,},44
Delimiter,},45
